apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo
  namespace: demo
  labels:
    app: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo
  template:
    metadata:
      labels:
        app: demo
      annotations:
        # enable vault agent inject
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-pre-populate-only: "true"
        # role name
        vault.hashicorp.com/role: 'demo'
        # vaule: full path of secret in vault, mylookatme is the file name of secret
        vault.hashicorp.com/agent-inject-secret-mylookatme: "demo/data/vault/inject"
        # indicate the full path of secret and which file for
        vault.hashicorp.com/secret-volume-path-mylookatme: "/vault/my-inject"
        # generate for which file and for such a template
        vault.hashicorp.com/agent-inject-template-mylookatme: |
          {{- with secret "demo/data/vault/inject" -}}
          {{ .Data.data.key }}
          {{- end -}}
    spec:
      containers:
      - image: centos
        imagePullPolicy: Always
        name: demo
        command: ["/bin/sh", "-c"]
        args: ["tail -f /dev/null"]
        volumeMounts:
        - mountPath: /vault/es/
          name: es
      restartPolicy: Always
      volumes:
      - name: es
        secret:
          # referenced secret which generated by external-secret
          secretName: myes
